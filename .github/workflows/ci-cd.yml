name: College ERP CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Build frontend
      - name: Build frontend
        working-directory: ./client
        run: |
          npm ci
          npm run build

      # Step 4: Build backend
      - name: Build backend
        working-directory: ./server
        run: |
          npm ci

      # Step 5: Login to Docker Hub
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build and push frontend Docker image
      - name: Build and push frontend image
        run: |
          docker build -t yogesh07garg/image-client:latest ./client
          docker push yogesh07garg/image-client:latest

      # Step 7: Build and push backend Docker image
      - name: Build and push backend image
        run: |
          docker build -t yogesh07garg/image-server:latest ./server
          docker push yogesh07garg/image-server:latest

      # Step 8: Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 9: Decode kubeconfig
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # Step 10: Apply Kubernetes manifests
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./k8s
          kubectl rollout restart deployment client
          kubectl rollout restart deployment server
